syntax = "proto3";

package calculator;

option go_package="calculatorpb";

message Calculator{
  int32 a = 1;
  int32 b = 2;
}

message CalculatorRequest{
  Calculator calculator = 1;
}

message CalculatorResponse{
  int32 result = 1;
}

message PrimeNumberRequest{
  int64 number = 1;
}

message PrimeNumberResponse{
  int64 result = 1;
}

message ComputeAverageRequest{
  int64 number = 1;
}

message ComputeAverageResponse{
  int64 result = 1;
}

message FindMaximumRequest{
  int64 number = 1;
}

message FindMaximumResponse{
  int64 result = 1;
}

message SquareRootRequest{
  int32 number = 1;
}

message SquareRootResponse{
  double number_root = 1;
}

service CalculatorService{
  // Unary
  rpc Calculator(CalculatorRequest) returns (CalculatorResponse){};

  // Sever Streaming
  rpc PrimeNumberDecomposition(PrimeNumberRequest) returns (stream PrimeNumberResponse){};

  // Client Streaming
  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse){};

  // BiDi Streaming
  rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse){};

  // error handling
  // this RPC will throw an exception if the sent number is negative
  // The error being sent is of type INVALID_ARGUMENT
  rpc SquareRoot(stream SquareRootRequest) returns (stream SquareRootResponse){};

}
